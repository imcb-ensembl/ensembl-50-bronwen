#!/usr/local/bin/perl

use Bio::EnsEMBL::Analysis;
use Bio::EnsEMBL::Pipeline::Rule;
use Bio::EnsEMBL::DBSQL::AnalysisAdaptor;
use Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor;

use strict;
use Getopt::Long;

my $host;
my $user = 'ensadmin';
my $pass = 'ensembl';
my $port = 3306;
my $dbname;
my $logic_name;
my $inputclass;
my $dependents;
my $type;

&GetOptions(
            'dbhost:s'     => \$host,
            'dbport:n'     => \$port,
            'dbuser:s'     => \$user,
            'dbpass:s'     => \$pass,
            'dbname:s'     => \$dbname,
            'inputclass:s' => \$inputclass,
            'dependents:s' => \$dependents,
            'logic_name:s' => \$logic_name,
           );

my @dependents = split(/:/,$dependents);

print "Adding new analysis to pipeline for [$logic_name] Dependencies are @dependents\n";

my $db = new Bio::EnsEMBL::Pipeline::DBSQL::DBAdaptor(-host   => $host,
                                                      -user   => $user,
                                                      -pass   => $pass,
                                                      -port   => $port,
                                                      -dbname => $dbname);


my $analysis = $db->get_AnalysisAdaptor->fetch_by_logic_name($logic_name);

if (!defined($analysis)) {
  die "No analysis defined for $logic_name\n";
}

my %analhash;

foreach my $dep (@dependents) {
  my $ana = $db->get_AnalysisAdaptor->fetch_by_logic_name($dep);

  if (!defined($ana)) {
    die "No analysis defined for $dep\n";
  }

  $analhash{$dep} = $ana;
}

# Make rule

my $rule = new Bio::EnsEMBL::Pipeline::Rule(-adaptor => $db,
                                            -goal    => $analysis,
                                            );
# Make rule conditions

foreach my $dep (@dependents) {
  $rule->add_condition($dep);
}

$db->get_RuleAdaptor->store($rule);

